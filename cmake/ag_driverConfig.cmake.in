#=================================================================
# Config file for the @PROJECT_NAME@ package
# It defines the following variables
#  ag_driver_INCLUDE_DIRS - include directories for @PROJECT_NAME@
#  ag_driver_LIBRARIES    - libraries to link against
#  ag_driver_FOUND        - found flag
#=================================================================

if(WIN32)
  if(CMAKE_SIZEOF_VOID_P EQUAL 8)     # 64-bit
    set(Boost_ARCHITECTURE "-x64")
  elseif(CMAKE_SIZEOF_VOID_P EQUAL 4) # 32-bit
    set(Boost_ARCHITECTURE "-x32")
  endif()
  set(Boost_USE_STATIC_LIBS ON)
  set(Boost_USE_MULTITHREADED ON)
  set(Boost_USE_STATIC_RUNTIME OFF)
endif(WIN32)

if(${ENABLE_TRANSFORM})
  add_definitions("-DENABLE_TRANSFORM")
endif(${ENABLE_TRANSFORM})

set(ag_driver_INCLUDE_DIRS "@DRIVER_INCLUDE_DIRS@;@INSTALL_DRIVER_DIR@")
set(AG_DRIVER_INCLUDE_DIRS "@DRIVER_INCLUDE_DIRS@;@INSTALL_DRIVER_DIR@")

set(ag_driver_LIBRARIES "@EXTERNAL_LIBS@")
set(AG_DRIVER_LIBRARIES "@EXTERNAL_LIBS@")

set(ag_driver_FOUND true)
set(AG_DRIVER_FOUND true)

#========================
# Check Version
#========================

set (PACKAGE_VERSION "@ag_driver_VERSION@")
message(=============================================================)
message("-- ag_driver Version : v${PACKAGE_VERSION}")
message(=============================================================)

# Check whether the requested PACKAGE_FIND_VERSION is compatible
if ("${PACKAGE_VERSION}" VERSION_LESS "${PACKAGE_FIND_VERSION}")
  set (PACKAGE_VERSION_COMPATIBLE FALSE)
else ()
  set (PACKAGE_VERSION_COMPATIBLE TRUE)
  if ("${PACKAGE_VERSION}" VERSION_EQUAL "${PACKAGE_FIND_VERSION}")
    set (PACKAGE_VERSION_EXACT TRUE)
  endif ()
endif ()